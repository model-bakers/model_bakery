name: Tests

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  linters:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        lint-command:
          - ruff check --output-format=github .
          - black --check --diff .
          - mypy model_bakery
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: "3.12"
          cache: pip
      - run: python -m pip install .[test]
      - run: ${{ matrix.lint-command }}

  tests:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
    env:
      PGUSER: postgres
      PGPASSWORD: postgres
    services:
      postgis:
        image: postgis/postgis
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v5

      - name: Set up PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install -y gdal-bin
          psql template1 -c "CREATE EXTENSION citext;" -U postgres -h localhost -p 5432
          psql template1 -c "CREATE EXTENSION hstore;" -U postgres -h localhost -p 5432
          psql template1 -c "CREATE EXTENSION postgis;" -U postgres -h localhost -p 5432

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel tox

      - name: Run tox targets for ${{ matrix.python-version }}
        run: tox run -f py$(echo ${{ matrix.python-version }} | tr -d .)

      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.python-version }}
          include-hidden-files: true
          path: '.coverage.*'
          if-no-files-found: ignore

  coverage:
    name: Coverage
    runs-on: ubuntu-22.04
    needs: tests
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-python@v6
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: python -m pip install --upgrade coverage[toml]

      - name: Download data
        uses: actions/download-artifact@v5
        with:
          pattern: coverage-data-*
          merge-multiple: true

      - name: Combine coverage and fail if it's <95%
        run: |
          python -m coverage combine
          python -m coverage html --skip-covered --skip-empty
          python -m coverage report --fail-under=95

      - name: Upload HTML report
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: html-report
          path: htmlcov
